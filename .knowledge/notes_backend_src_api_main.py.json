{"is_source_file": true, "format": "Python", "description": "This is a backend source file implementing a REST API for a note organizer application. It provides user authentication, note CRUD operations, organization features such as tags and folders, and search functionality. It uses FastAPI and in-memory data stores for demonstration.", "external_files": [".env"], "external_methods": ["load_dotenv", "jwt.encode", "jwt.decode", "verify_password", "get_password_hash"], "published": ["health_check", "register_user", "login", "read_users_me", "create_note", "list_notes", "get_note", "update_note", "delete_note", "list_tags", "list_folders", "search_notes"], "classes": [{"name": "Token", "description": "JWT token response model, containing the access token and token type"}, {"name": "TokenData", "description": "Data extracted from JWT token, mainly the username"}, {"name": "UserBase", "description": "Base user model with username and email"}, {"name": "UserCreate", "description": "Model for creating new users, extends UserBase with password"}, {"name": "UserPublic", "description": "Public view of user data, including user ID"}, {"name": "UserLogin", "description": "Login request model with username and password"}, {"name": "NoteBase", "description": "Base model for notes including title, content, tags, and folder"}, {"name": "NoteCreate", "description": "Model for creating a note, extends NoteBase"}, {"name": "NoteUpdate", "description": "Model for updating notes with optional fields"}, {"name": "NotePublic", "description": "Public view of notes, including ID and owner ID"}], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verifies a plaintext password against a hashed password", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Generates a hashed password from a plaintext password", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Creates a JWT token with embedded data and expiration", "scope": "", "scopeKind": ""}, {"name": "Optional[dict] get_user(username: str)", "description": "Retrieves a user record from in-memory store", "scope": "", "scopeKind": ""}, {"name": "Optional[dict] authenticate_user(username: str, password: str)", "description": "Verifies user credentials and returns user if valid", "scope": "", "scopeKind": ""}, {"name": "None add_tags_and_folders(tags: List[str], folder: Optional[str])", "description": "Adds tags and folders to global stores from provided lists", "scope": "", "scopeKind": ""}, {"name": "create_note(note: NoteCreate, current_user: dict = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_note( note_id: int = Path(..., description=\"Note ID\"), current_user: dict = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dict get_current_user(token: str = Depends(oauth2_scheme))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_note( note_id: int = Path(..., description=\"Note ID\"), current_user: dict = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_folders(current_user: dict = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_notes( current_user: dict = Depends(get_current_user), folder: Optional[str] = Query(default=None, description=\"Filter by folder\"), tag: Optional[str] = Query(default=None, description=\"Filter by tag\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_tags(current_user: dict = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends())", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "read_users_me(current_user: dict = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "register_user(payload: UserCreate)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "search_notes( q: str = Query(..., min_length=1, description=\"Search query string matched against title and content\"), current_user: dict = Depends(get_current_user), tag: Optional[str] = Query(default=None, description=\"Optional tag filter\"), folder: Optional[str] = Query(default=None, description=\"Optional folder filter\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_note( note_id: int = Path(..., description=\"Note ID\"), payload: NoteUpdate = ..., current_user: dict = Depends(get_current_user), )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["load_dotenv", "jwt.encode", "jwt.decode", "verify_password", "get_password_hash", "create_access_token", "authenticate_user"], "search-terms": ["FastAPI", "JWT authentication", "notes CRUD API", "In-memory data store", "Note organizer backend", "tags and folders management", "search notes endpoint"], "state": 2, "file_id": 2, "knowledge_revision": 12, "git_revision": "0239e264ff2cd838ce3fdd4f249c6d87cdb7bba5", "revision_history": [{"8": "fd7e3e43f63fe7d3e721d7f058d82896ae1514fa"}, {"10": "fd7e3e43f63fe7d3e721d7f058d82896ae1514fa"}, {"12": "0239e264ff2cd838ce3fdd4f249c6d87cdb7bba5"}], "ctags": [{"_type": "tag", "name": "CORS_ALLOW_ORIGINS", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^CORS_ALLOW_ORIGINS = [o.strip() for o in os.getenv(\"CORS_ALLOW_ORIGINS\", \"*\").split(\",\")] if os./", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^JWT_ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"CHANGE_ME_DEV_SECRET\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotePublic", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class NotePublic(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenData", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class TokenData(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserBase", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class UserBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(UserBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserLogin", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class UserLogin(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserPublic", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^class UserPublic(UserBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_note_id_counter", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^_note_id_counter = 1$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_user_id_counter", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^_user_id_counter = 1$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "add_tags_and_folders", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def add_tags_and_folders(tags: List[str], folder: Optional[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(tags: List[str], folder: Optional[str])"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def authenticate_user(username: str, password: str) -> Optional[dict]:$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "function", "signature": "(username: str, password: str)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"Updated content\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"Note content in markdown or text\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def create_note(note: NoteCreate, current_user: dict = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(note: NoteCreate, current_user: dict = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., description=\"Note ID\"), current_user: dict = Depends(get_current_user), )"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserBase", "scopeKind": "class"}, {"_type": "tag", "name": "folder", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    folder: Optional[Optional[str]] = Field(default=None, description=\"Updated folder (string or/", "language": "Python", "typeref": "typename:Optional[Optional[str]]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "folder", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    folder: Optional[str] = Field(default=None, description=\"Folder name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "folders_store", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^folders_store = set()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme)) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., description=\"Note ID\"), current_user: dict = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_user", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def get_user(username: str) -> Optional[dict]:$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "function", "signature": "(username: str)"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Note ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NotePublic", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"User ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "list_folders", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def list_folders(current_user: dict = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: dict = Depends(get_current_user))"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def list_notes($/", "language": "Python", "kind": "function", "signature": "( current_user: dict = Depends(get_current_user), folder: Optional[str] = Query(default=None, description=\"Filter by folder\"), tag: Optional[str] = Query(default=None, description=\"Filter by tag\"), )"}, {"_type": "tag", "name": "list_tags", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def list_tags(current_user: dict = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: dict = Depends(get_current_user))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def login(form_data: OAuth2PasswordRequestForm = Depends()):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends())"}, {"_type": "tag", "name": "notes_store", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^notes_store = {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    owner_id: int = Field(..., description=\"Owner user ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NotePublic", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., description=\"Password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserLogin", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, max_length=128, description=\"User password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def read_users_me(current_user: dict = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: dict = Depends(get_current_user))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def register_user(payload: UserCreate):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate)"}, {"_type": "tag", "name": "search_notes", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def search_notes($/", "language": "Python", "kind": "function", "signature": "( q: str = Query(..., min_length=1, description=\"Search query string matched against title and content\"), current_user: dict = Depends(get_current_user), tag: Optional[str] = Query(default=None, description=\"Optional tag filter\"), folder: Optional[str] = Query(default=None, description=\"Optional folder filter\"), )"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    tags: List[str] = Field(default_factory=list, description=\"List of tag names\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    tags: Optional[List[str]] = Field(default=None, description=\"Updated tags list\")$/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "tags_store", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^tags_store = set()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, max_length=200, description=\"Updated title\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., max_length=200, description=\"Note title\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(default=\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^async def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., description=\"Note ID\"), payload: NoteUpdate = ..., current_user: dict = Depends(get_current_user), )"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    username: Optional[str] = Field(None, description=\"Username embedded in the token\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TokenData", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., description=\"Username\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserLogin", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., min_length=3, max_length=50, description=\"Unique username\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserBase", "scopeKind": "class"}, {"_type": "tag", "name": "users_store", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^users_store = {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-organizer-16346-16355/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "5019698385f213465dbebd715e351cad", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "CORS_ALLOW_ORIGINS = [o.strip() for o in os.getenv(\"CORS_ALLOW_ORIGINS\", \"*\").split(\",\")] if os./", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ALGORITHM = os.getenv(\"JWT_ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"CHANGE_ME_DEV_SECRET\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_note_id_counter = 1", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_user_id_counter = 1", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Optional[str]] folder", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] folder", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "folders_store = set()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int id", "scope": "NotePublic", "scopeKind": "class", "description": "unavailable"}, {"name": "notes_store = {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int owner_id", "scope": "NotePublic", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserLogin", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[str] tags", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[List[str]] tags", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "tags_store = set()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] username", "scope": "TokenData", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserLogin", "scopeKind": "class", "description": "unavailable"}, {"name": "users_store = {}", "scope": "", "scopeKind": "", "description": "unavailable"}]}